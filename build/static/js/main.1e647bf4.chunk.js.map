{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoValue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","src","logo","width","height","className","alt","type","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","map","name","checked","deleteItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,MAA0B,iC,eC4F1BA,E,kDAvFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IAJQ,E,2CAQlB,SAAQC,GACN,GAAiB,KAAdA,EAAiB,CAClB,IAAMF,EAAU,CACdG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAEJN,EAAI,YAAOO,KAAKT,MAAME,MAC5BA,EAAKQ,KAAKT,GAEVQ,KAAKE,SAAS,CACZT,OACAD,QAAS,Q,wBAKf,SAAWG,GACT,IACMQ,EADI,YAAOH,KAAKT,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,KACpDK,KAAKT,MAAM,CAACE,KAAMU,M,yBAGpB,SAAYG,GACVN,KAAKE,SAAS,CAACV,QAASc,M,oBAG1B,WAAS,IAAD,OACN,OACE,gCACE,qBAAKC,IAAKC,EAAMC,MAAM,MAAMC,OAAO,MAAMC,UAAU,OAAOC,IAAI,KAC9D,oBAAID,UAAU,YAAd,wBACA,sBAAKA,UAAU,YAAf,4BAEE,uBACA,uBACEE,KAAK,OACLF,UAAU,aACVG,YAAY,eACZC,UAAQ,EACRjB,MAAOE,KAAKT,MAAMC,QAClBwB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAOrB,UAC3C,wBACEa,UAAU,UACVS,QAAS,kBAAM,EAAKC,QAAQ,EAAK9B,MAAMC,UACvC8B,UAAWtB,KAAKT,MAAMC,QAAQ+B,OAHhC,uBAKA,qBAAKZ,UAAU,OAAf,SACE,+BACGX,KAAKT,MAAME,KAAK+B,KAAI,SAAAnB,GACnB,OACE,+BACE,uBACEQ,KAAK,WACLY,KAAK,SACLC,QAASrB,EAAKN,OACdiB,SAAU,eAEXX,EAAKP,MACN,wBACEa,UAAU,MACVS,QAAS,kBAAM,EAAKO,WAAWtB,EAAKV,KAFtC,sBAROU,EAAKV,OAelB,+BACE,uBAAOkB,KAAK,WAAWY,KAAK,KAD9B,wBAGE,wBAAQd,UAAU,MAAlB,sC,GA9EEiB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1e647bf4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: [] \n    }\n  }\n\n  addItem(todoValue){\n    if(todoValue !== \"\"){\n      const newItem = {\n        id: Date.now(),\n        value: todoValue,\n        isDone: false\n      };\n      const list = [...this.state.list];\n      list.push(newItem);\n\n      this.setState({\n        list,\n        newItem: \"\"\n      });\n    }\n  }\n\n  deleteItem(id){\n    const list = [...this.state.list];\n    const updatedlist = list.filter(item => item.id !== id);\n    this.state({list: updatedlist});\n  }\n\n  updateInput(input){\n    this.setState({newItem: input});\n  }\n\n  render(){\n    return(\n      <div>\n        <img src={logo} width=\"100\" height=\"100\" className=\"logo\" alt=\"\"></img>\n        <h1 className=\"app-title\"> To-do App</h1>\n        <div className=\"container\">\n          Add an Item....\n          <br />\n          <input \n            type=\"text\" \n            className=\"input-text\" \n            placeholder=\"Write a task\"\n            required\n            value={this.state.newItem}\n            onChange={e => this.updateInput(e.target.value)}></input>\n          <button \n            className=\"add-btn\"\n            onClick={() => this.addItem(this.state.newItem)}\n            disabled={!this.state.newItem.length}>\n            Add To-do</button>\n          <div className=\"list\">\n            <ul>\n              {this.state.list.map(item => {\n                return(\n                  <li key={item.id}>\n                    <input \n                      type=\"checkbox\"\n                      name=\"idDone\"\n                      checked={item.isDone}\n                      onChange={() => {}}\n                      />\n                    {item.value}\n                    <button\n                      className=\"btn\"\n                      onClick={() => this.deleteItem(item.id)}>\n                    Delete</button>\n                  </li>\n                );\n              })}\n              <li>\n                <input type=\"checkbox\" name=\"\"></input>\n                Record Youtube videos\n                <button className=\"btn\">Delete</button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}